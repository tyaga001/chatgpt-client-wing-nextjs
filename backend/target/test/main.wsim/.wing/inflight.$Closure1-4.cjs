"use strict";
const $helpers = require("@winglang/sdk/lib/helpers");
module.exports = function({ $____parent_this_1_props_useBuildCommand_____null_, $__parent_this_1_buildCommand, $__parent_this_1_buildDir, $__parent_this_1_env, $__parent_this_1_path, $__parent_this_1_startCommand, $fs_Util, $props_localPort, $state, $std_Json, $util_Util, $utils_Utils }) {
  class $Closure1 {
    constructor({  }) {
      const $obj = (...args) => this.handle(...args);
      Object.setPrototypeOf($obj, this);
      return $obj;
    }
    async handle() {
      const port = ($props_localPort ?? 3001);
      (await $state.set("url", String.raw({ raw: ["http://localhost:", ""] }, port)));
      (await $fs_Util.writeFile((await $fs_Util.join($__parent_this_1_path, "public", "wing.js")), String.raw({ raw: ["// This file is generated by wing\nwindow.wingEnv = ", ";"] }, ((json, opts) => { return JSON.stringify(json, null, opts?.indent) })($__parent_this_1_env))));
      const env = {...($__parent_this_1_env)};
      ((obj, args) => { obj[args[0]] = args[1]; })(env, ["PORT", String.raw({ raw: ["", ""] }, port)]);
      if ($helpers.eq($____parent_this_1_props_useBuildCommand_____null_, true)) {
        (await $util_Util.shell($__parent_this_1_buildCommand, { env: ({...(env)}), cwd: $__parent_this_1_path, inheritEnv: true }));
        return (await $utils_Utils.serveStaticFiles($__parent_this_1_buildDir, port));
      }
      return (await $utils_Utils.exec($__parent_this_1_startCommand, env, $__parent_this_1_path));
    }
  }
  return $Closure1;
}
//# sourceMappingURL=inflight.$Closure1-4.cjs.map